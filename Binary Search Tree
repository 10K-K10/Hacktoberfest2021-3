#include <bits/stdc++.h>
 
using namespace std;
class node
{
	public:
	node *left,*right;
	long long int data;
};
node *getnode(long long int x)
{
	node* temp=new node;
	temp->left=NULL;
	temp->right=NULL;
	temp->data=x;
	return temp;
}
node *insert(node *root,long long int x)
{
	if(root==NULL)
	return getnode(x);
	else
	{
		if(root->data>=x)
		root->left=insert(root->left,x);
		else
		root->right=insert(root->right,x);
		return root;
	}
}
void level(node *root)
{
	if(root==NULL)
	{
		cout<<0<<endl;
		return;
	}
	queue<node*> q;
	vector<node*> v;
	q.push(root);
	v.push_back(q.front());
	
	while(q.size())
	{
		
		int size=q.size();
		while(size--)
		{
			if(q.front()->left!=NULL)
			q.push(q.front()->left);
			if(q.front()->right!=NULL)
			q.push(q.front()->right);
			q.pop();
		}
		if(q.size()>0)
		v.push_back(q.front());
	}
 
		cout<<v.size()<<endl;
		v.clear();
		while(!q.empty())
		q.pop();
		return;
}
int main() {
	int num;
	cin >> num;										
	
	while(num--)
	{
		int n;
		cin>>n;
		node *root=NULL;
		while(n--)
		{
			long long int x;
			cin>>x;
			root=insert(root,x);
		}
	level(root);
	}	
			
}
 
